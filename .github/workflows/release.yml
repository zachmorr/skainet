name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

env:
  TWINE_USERNAME: __token__
  TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

jobs:
  # test:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [ubuntu-latest, windows-latest]
  #       python-version: ["3.7","3.8", "3.9", "3.10", "3.11"]

  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       python -m pip install -r requirements.txt
  #   - name: Build with Pyinstaller
  #     run: |
  #       pyinstaller skainet.spec

  build_dist:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.7
      uses: actions/setup-python@v3
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade build

    - name: Build bdist/sdist
      run: python -m build

    - name: Echo
      run: ls -l

    - name: Echo dist
      run: ls -l dist/

    - name: Upload build
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: dist/

  pypi_release:
    needs: build_dist
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python 3.7
      uses: actions/setup-python@v3
      with:
        python-version: 3.7
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade twine

    - name: Download dist
      uses: actions/download-artifact@v1
      with:
        name: dist

    - name: Echo dist
      run: ls -l dist/

    - name: Upload to Pypi
      run: python -m twine upload dist/*

  build_exe:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            TARGET: ubuntu
            CMD_BUILD: >
                pyinstaller skainet.spec -y &&
                cd dist &&
                zip -r ../skainet_linux.zip skainet &&
                cd ..
            OUT_FILE: ./skainet_linux.zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: >
                pyinstaller skainet.spec -y;
                Compress-Archive -LiteralPath './dist/skainet' -DestinationPath "./skainet_win.zip"
            OUT_FILE: ./skainet_win.zip

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.7
      uses: actions/setup-python@v3
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt

    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}

    - name: Upload executable
      uses: actions/upload-artifact@v1
      with:
        name: executable
        path: ${{ matrix.OUT_FILE}}

  gh_release:
    needs: [build_exe, pypi_release]
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Download executable
      uses: actions/download-artifact@v1
      with:
        name: executable

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: executable/skainet*.zip
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"